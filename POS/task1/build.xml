<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="Homework3" default="build">

	<!-- Definitions of variables used during the rest of this script -->

	<property file="version.properties" />
	<property file="application.properties" />

	<property name="build.dir" value="${basedir}/build" />
	<property name="build.classes.dir" value="${build.dir}/classes" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="dist.dir" value="${basedir}/build/jar/" />
	<property name="conf.dir" value="${basedir}/conf" />
	<property name="doc.dir" value="${build.dir}/doc" />
	<property name="test.dir" value="${basedir}/test" />
	<property name="test.reports.dir" value="${build.dir}/reports/" />
	<property name="dist.jar" value="${dist.dir}/sonytech.jar" />
	<property name="main.class" value="ee.ut.math.tvt.sonytech.Intro" />
	<property name="lib.dir" value="${basedir}/lib" />

	<!-- database variables -->
	<property name="data.dir" value="${basedir}/data" />
	<property name="db.file" value="${data.dir}/POSdb" />
	<property name="db.alias" value="POS" />
	<property name="db.url" value="jdbc:hsqldb:hsql://localhost/POS" />
	<property name="lib.hibernate.dir" value="${lib.dir}/hibernate" />

	<!-- Definitions of classpath variants used for different tasks -->

	<path id="compile.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${lib.hibernate.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="run.classpath">
		<pathelement location="${build.classes.dir}" />

		<!-- configuration -->
		<pathelement location="${conf.dir}" />
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>

		<fileset dir="${lib.hibernate.dir}">
			<include name="*.jar" />
		</fileset>
	</path>
	
	<path id="test-classpath">
	    <pathelement location="${conf.dir}" />
	    <pathelement path="${build.classes.dir}/" />
		<pathelement path="${build.test.dir}/" />
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${lib.hibernate.dir}">
			<include name="*.jar"/>
		</fileset>
	    
	</path>

	<!-- Definitions of runnable ant targets -->

	<target name="run" depends="build" description="Run the template application">
		<java classname="ee.ut.math.tvt.sonytech.Intro" classpathref="run.classpath"
			fork="yes">
			<jvmarg value="-Xdebug" />
			<jvmarg
				value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044" />
		</java>
	</target>

	<target name="build" description="Build the system">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="true"
			debuglevel="lines,vars,source" encoding="utf-8" compiler="modern"
			target="1.7" source="1.7" includeantruntime="false">
			<classpath refid="compile.classpath" />
		</javac>

	</target>

	<target name="dist" description="Build .jar file for distribution."
		depends="increaseRevision, build">
		<jar destfile="${dist.jar}" basedir="${build.classes.dir}">
			<zipfileset dir="${basedir}" includes="application.properties"
				fullpath="application.properties" />
			<zipfileset dir="${basedir}" includes="version.properties"
				fullpath="version.properties" />
			<zipfileset dir="${basedir}" includes="log4j.properties"
				fullpath="log4j.properties" />
			<zipfileset dir="${basedir}" includes="sonytech_logogo.png"
				fullpath="sonytech_logogo.png" />
			<archives>
				<zips>
					<fileset dir="lib" includes="**/*.jar" />
				</zips>
			</archives>
			<manifest>
				<attribute name="Main-Class" value="${main.class}" />
				<attribute name="Implementation-Vendor" value="sonytech" />
				<attribute name="Implementation-Title" value="IntroUI" />
				<attribute name="Implementation-Version" value="${build.number}" />
			</manifest>
		</jar>
	</target>

	<!-- Build internal documentation -->
	<target name="javadoc" description="Build internal documentation">
		<mkdir dir="${doc.dir}" />
		<javadoc destdir="${doc.dir}" classpathref="compile.classpath">
			<fileset dir="${src.dir}" includes="**/*.java" />
		</javadoc>
	</target>

	<!-- Clean up build system results -->
	<target name="clean" description="Clean up build system results">
		<delete dir="${build.dir}" />
	</target>

	<!-- Run .jar file -->
	<target name="jrun" description="Run the built jar file.">
		<java jar="${dist.jar}" fork="true" />
	</target>

	<!-- Revision management -->

	<target name="increaseRevision" description="Increase revision and update version.properties.">

		<propertyfile file="version.properties" comment="Version properties">
			<entry key="build.revision.number" type="int" default="0"
				operation="+" />
			<entry key="build.major.number" type="int" default="0" />
			<entry key="build.minor.number" type="int" default="0" />
		</propertyfile>

		<property file="version.properties" prefix="new" />

		<propertyfile file="version.properties" comment="Version properties">
			<entry key="build.number" operation="="
				value="${new.build.major.number}.${new.build.minor.number}.${new.build.revision.number}" />
		</propertyfile>
	</target>

	<!-- Run application -->
	<target name="runc" depends="build" description="Run the application (console)">
		<java classname="ee.ut.math.tvt.sonytech.Intro" classpathref="test.classpath"
			fork="yes">
			<arg value="console" />
		</java>
	</target>

	<!-- Git targets -->
	<target name="git_commit" description="Commit and push changes to repository">
		<exec executable="git">
			<arg value="add" />
			<arg value="-A" />
		</exec>
		<input message="Commit coment" addproperty="commitMsg" />
		<echo message="Commiting all changes with message ${commitMsg}" />
		<exec executable="git">
			<arg value="commit" />
			<arg value="-m ${commitMsg}" />
		</exec>
		<input message="Name:" addproperty="usname" />
		<input message="Password:" addproperty="passwd" />
		<exec executable="git">
			<arg value="push" />
			<arg
				value="https://${usname}:${passwd}@github.com/myloginistaken/sonytech.git" />
		</exec>
	</target>

	<target name="git_tag" description="Creates a tag">
		<input message="Name:" addproperty="usnameTag" />
		<input message="Password:" addproperty="passwdTag" />
		<input message="Tag name:" addproperty="tagName" />
		<input message="Tag coment:" addproperty="tagComent" />
		<exec executable="git">
			<arg value="tag" />
			<arg value="-a" />
			<arg value="${tagName}" />
			<arg value="-m" />
			<arg value="${tagComent}" />
		</exec>
		<exec executable="git">
			<arg value="push" />
			<arg
				value="https://${usnameTag}:${passwdTag}@github.com/myloginistaken/sonytech.git" />
			<arg value="--tags" />
		</exec>
	</target>

	<!-- DB targets -->
	<target name="dbmanager" description="Start the HSQLDB manager">
		<java classname="org.hsqldb.util.DatabaseManagerSwing"
			classpathref="run.classpath" fork="yes">
			<arg line="--user sa --url ${db.url}" />
		</java>
	</target>

	<target name="startdb" description="Start the HSQLDB with the default params">
		<java classname="org.hsqldb.Server" classpathref="run.classpath"
			fork="yes">
			<arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'" />
		</java>
	</target>
	
	
	<target name="build-tests" depends="build" description="Build JUnit tests">
		<mkdir dir="${build.test.dir}" />
		<javac
            srcdir="${test.dir}"
            destdir="${build.test.dir}"
            debug="true"
            debuglevel="lines,vars,source"
            encoding="utf-8"
            compiler="modern"
            target="1.5"
            source="1.5"
        	classpathref="test.classpath"
        	includeantruntime="false">
        </javac>
	</target>

	<target name="test" depends="build-tests" description="Run JUnit tests">

		<junit>
			<classpath refid="test.classpath" />

			<formatter type="brief" usefile="false" />
			<batchtest>
				<fileset dir="${build.test.dir}" includes="**/*.class" />
			</batchtest>
		</junit>

</project>
